SET SERVEROUTPUT ON;

CREATE OR REPLACE DIRECTORY UTLDATA AS 'C:/XML';
DROP DIRECTORY UTLDATA;

CREATE OR REPLACE PACKAGE XML_PACKAGE IS
  PROCEDURE EXPORT_SERVICES_TO_XML;
  PROCEDURE IMPORT_SERVICES_FROM_XML;
END XML_PACKAGE;

---
CREATE OR REPLACE PACKAGE BODY XML_PACKAGE IS
PROCEDURE EXPORT_Services_TO_XML
IS
  DOC  DBMS_XMLDOM.DOMDocument;
  XDATA  XMLTYPE;
  CURSOR XMLCUR IS
    SELECT XMLELEMENT("SERVICES",
      XMLAttributes('http://www.w3.org/2001/XMLSchema' AS "xmlns:xsi",
      'http://www.oracle.com/Employee.xsd' AS "xsi:nonamespaceSchemaLocation"),
      XMLAGG(XMLELEMENT("SERVICES",
        XMLELEMENT("ID",SER.ID),
        XMLELEMENT("Name",SER.Name),
        XMLELEMENT("Price",SER.Price),
	XMLELEMENT("ESTIMCOMPTIME",SER.ESTIMCOMPTIME)
      ))
) FROM SERVICES SER;
BEGIN
  OPEN XMLCUR;
    LOOP
      FETCH XMLCUR INTO XDATA;
    EXIT WHEN XMLCUR%NOTFOUND;
    END LOOP;
  CLOSE XMLCUR;
  DOC := DBMS_XMLDOM.NewDOMDocument(XDATA);
  DBMS_XMLDOM.WRITETOFILE(DOC, 'UTLDATA/SERVICES.xml');
END EXPORT_SERVICES_TO_XML;

PROCEDURE IMPORT_SERVICES_FROM_XML
IS
  L_CLOB CLOB;
  L_BFILE  BFILE := BFILENAME('UTLDATA', 'SERVICES.xml');

  L_DEST_OFFSET   INTEGER := 1;
  L_SRC_OFFSET    INTEGER := 1;
  L_BFILE_CSID    NUMBER  := 0;
  L_LANG_CONTEXT  INTEGER := 0;
  L_WARNING       INTEGER := 0;

  P                DBMS_XMLPARSER.PARSER;
  V_DOC            DBMS_XMLDOM.DOMDOCUMENT;
  V_ROOT_ELEMENT   DBMS_XMLDOM.DOMELEMENT;
  V_CHILD_NODES    DBMS_XMLDOM.DOMNODELIST;
  V_CURRENT_NODE   DBMS_XMLDOM.DOMNODE;

  SER SERVICES%ROWTYPE;
BEGIN
  DBMS_LOB.CREATETEMPORARY (L_CLOB, TRUE);
  DBMS_LOB.FILEOPEN(L_BFILE, DBMS_LOB.FILE_READONLY);

  DBMS_LOB.LOADCLOBFROMFILE (DEST_LOB => L_CLOB, SRC_BFILE => L_BFILE, AMOUNT => DBMS_LOB.LOBMAXSIZE,
    DEST_OFFSET => L_DEST_OFFSET, SRC_OFFSET => L_SRC_OFFSET, BFILE_CSID => L_BFILE_CSID,
    LANG_CONTEXT => L_LANG_CONTEXT, WARNING => L_WARNING);
  DBMS_LOB.FILECLOSE(L_BFILE);
  COMMIT;

   P := DBMS_XMLPARSER.NEWPARSER;

   DBMS_XMLPARSER.PARSECLOB(P,L_CLOB);

   V_DOC := DBMS_XMLPARSER.GETDOCUMENT(P);

   V_ROOT_ELEMENT := DBMS_XMLDOM.Getdocumentelement(v_Doc);

   V_CHILD_NODES := DBMS_XMLDOM.GETCHILDRENBYTAGNAME(V_ROOT_ELEMENT,'*');

   FOR i IN 0 .. DBMS_XMLDOM.GETLENGTH(V_CHILD_NODES) - 1
   LOOP

      V_CURRENT_NODE := DBMS_XMLDOM.ITEM(V_CHILD_NODES,i);

      DBMS_XSLPROCESSOR.VALUEOF(V_CURRENT_NODE,
        'ID/text()',SER.ID);
      DBMS_XSLPROCESSOR.VALUEOF(V_CURRENT_NODE,
        'Name/text()',SER.Name);
      DBMS_XSLPROCESSOR.VALUEOF(V_CURRENT_NODE,
        'Price/text()',SER.Price);
	DBMS_XSLPROCESSOR.VALUEOF(V_CURRENT_NODE,
        'ESTIMCOMPTIME/text()',SER.ESTIMCOMPTIME);
BEGIN
DBMS_OUTPUT.PUT_LINE('ID: '||SER.ID);
DBMS_OUTPUT.PUT_LINE('Name: '||SER.Name);
DBMS_OUTPUT.PUT_LINE('Price: '||SER.Price);
DBMS_OUTPUT.PUT_LINE('ESTIMCOMPTIME: '||SER.ESTIMCOMPTIME);
DBMS_OUTPUT.PUT_LINE('');
END;

   END LOOP;

  DBMS_LOB.FREETEMPORARY(L_CLOB);
  DBMS_XMLPARSER.FREEPARSER(P);
  DBMS_XMLDOM.FREEDOCUMENT(V_DOC);
  COMMIT;
EXCEPTION
  WHEN OTHERS THEN
  DBMS_LOB.FREETEMPORARY(L_CLOB);
  DBMS_XMLPARSER.FREEPARSER(P);
  DBMS_XMLDOM.FREEDOCUMENT(V_DOC);
  RAISE_APPLICATION_ERROR(-20101, 'IMPORT XML ERROR'|| SQLERRM);
END IMPORT_SERVICES_FROM_XML;

END XML_PACKAGE;

begin
    XML_PACKAGE.EXPORT_SERVICES_TO_XML();
    XML_PACKAGE.IMPORT_SERVICES_FROM_XML();
end;